// Mocks generated by Mockito 5.4.5 from annotations
// in asset_tree/test/features/asset_tree/presentation/providers/asset_tree_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:asset_tree/features/asset_tree/domain/entities/asset.dart'
    as _i5;
import 'package:asset_tree/features/asset_tree/domain/entities/location.dart'
    as _i4;
import 'package:asset_tree/features/asset_tree/domain/usecases/get_asset_tree.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [GetAssetTree].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAssetTree extends _i1.Mock implements _i2.GetAssetTree {
  MockGetAssetTree() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> execute(String? companyId) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [companyId]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i4.Location? getLocation(String? id) =>
      (super.noSuchMethod(Invocation.method(#getLocation, [id]))
          as _i4.Location?);

  @override
  List<_i4.Location> getRootLocations() =>
      (super.noSuchMethod(
            Invocation.method(#getRootLocations, []),
            returnValue: <_i4.Location>[],
          )
          as List<_i4.Location>);

  @override
  List<_i4.Location> getSubLocations(String? parentId) =>
      (super.noSuchMethod(
            Invocation.method(#getSubLocations, [parentId]),
            returnValue: <_i4.Location>[],
          )
          as List<_i4.Location>);

  @override
  List<_i5.Asset> getUnlinkedAssets() =>
      (super.noSuchMethod(
            Invocation.method(#getUnlinkedAssets, []),
            returnValue: <_i5.Asset>[],
          )
          as List<_i5.Asset>);

  @override
  List<_i5.Asset> getLocationAssets(String? locationId) =>
      (super.noSuchMethod(
            Invocation.method(#getLocationAssets, [locationId]),
            returnValue: <_i5.Asset>[],
          )
          as List<_i5.Asset>);

  @override
  List<_i5.Asset> getChildAssets(String? parentId) =>
      (super.noSuchMethod(
            Invocation.method(#getChildAssets, [parentId]),
            returnValue: <_i5.Asset>[],
          )
          as List<_i5.Asset>);
}
